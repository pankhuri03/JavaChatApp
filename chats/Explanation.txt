like in fx u need to type code for each element u add
u dont have to do that in swing....u just need to place the component and it automatically creates the code for in the main code
for example
im going to create a stage , like how u call in fx....here it  is called.....xxxx
so just see how to make an interface with swng
can one of u pin my screen and record it?
text me once u are
so the process to create a interface is to frist crete a project
once the project is created, it automatically creates a main ckass like u know

demo.java is the main class
but like in fx, ur main interface will be in an extended class
like how u write extens Application
 
so now we need to create the code for the interface
 as u can see, a bank space is created for u to add ur components...now lets start by adding a 
normal desktop frame like the one im showing

now this is something like the stage in fx
before that...let me show u the code that gets creaed automatically

not man lines of code...code ends at line 84
now this is the automatic inbuilt code that gets attached to the program every time u 
add a new cimponent

lear till here?
unlike java fx u dont have to code each part..its just adding 
thtas all...any doubts? in chat pane

now moving on to the next step
what u call a "scene" in fx is similar to a frame in java swing
before that..let me run and show u this code
is this part okay?

now if u dont want to use the conventional windows desktop window or frame, u can use a custom one...like here
we have used here the non-conventional method of a window.....now ill come back to this in the last...but
going on to adding frame...this is how it is
remmeber in fx....u had to type Stage s=new Stage(title);
the same ting is done automatically by the IDE....so u just need to drag n drop

the old one and the new one....u can spot the differencas cas there is space allocated for the panel

lets name the window now

well the tooltip text is somewhat like this thing, like when u hover over on a menu
and u want to know what it is ...like this
u saw that pause/io thing that showed...thats what it is.....now
lets add a label to the scene/panel
a simple label...no formatting

u can format the panel, the label etc from that box in the right hand side
it shows properties of each and every component
and every "EVENT" that u can do on "Action"....like how in java, u were taught to diaply some string when a particular
button is pressde....same here
now since we used the non-conv methd....im going to remove the desktop pane
to remove the windows defult frame...see the diff
now see the diff...the close minimize and maxi options are gone...beacuse i 
gave an option to keep the frame undecorated...i.e without the options....this option
is available here...is this part clear?

now next thing is to make our window...well technically it cant be called a window....cas i have no stage and im using a scene
so i need to make the scene have the optios for close and move around....stage==Desktop pane
scene=Panel.....okay cool

now to make the panel/scene work as a control, i need to first make the event and
action related to it

for example, lets say i want to make the label: Demo: pan.....jihisha work as my control
to relocate the window
watch carefully

when i click on the event for mouse when dragged, it automatically created a function


    private void jLabel1MouseDragged(java.awt.event.MouseEvent evt) {                                     
        //the code to relocate the whole frame, goes like this
 int x = evt.getXOnScreen();//this stores the x cordinate of the label rather on the screen
        int y = evt.getYOnScreen();//similarly this stores y
        this.setLocation(x, y);//now this sets the new location of the label to where the mouse is dragged and left..
is this part clear?....message in chat...asap.....i kinda have a mouth ulcer
so..maybe in some time..till then manage....now continue=ing

remember: get and set are simple easy words reltable here

    }                               



next thing will be to add a text field....



ss------------------client 

  ---->din readUTF   
s------------------s  client
   <----dout writeUTF


msg_area.getText();
msg_area.setText(msg_area.getText()+"\n"+msgin);

jigisha


server
serversocket  ss
socket   s
s=ss.accept();

client
socket s


same port
8000


